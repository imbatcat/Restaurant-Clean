// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurants.Infrastructure.Persistence;

#nullable disable

namespace Restaurants.Infrastructure.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    partial class RestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Restaurants.Domain.Entities.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KiloCalories")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Eos dolorem asperiores nam repellendus dolorum quae maiores dolores.",
                            KiloCalories = 183,
                            Name = "Refined Concrete Soap",
                            Price = 94.37659676390540m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Nam quisquam et molestias quae amet nemo nesciunt provident odit.",
                            KiloCalories = 422,
                            Name = "Generic Rubber Car",
                            Price = 11.3407968084052190m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Saepe corrupti quae id.",
                            KiloCalories = 371,
                            Name = "Handmade Frozen Sausages",
                            Price = 88.785853029128990m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Beatae unde et qui quibusdam ut laborum.",
                            Name = "Handcrafted Rubber Cheese",
                            Price = 14.929594655954085m,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Cum omnis est quod.",
                            Name = "Tasty Granite Pizza",
                            Price = 43.428333254264780m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Veniam repellendus nihil.",
                            KiloCalories = 867,
                            Name = "Gorgeous Metal Computer",
                            Price = 11.7981372805303580m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Blanditiis dolore natus nisi sed pariatur dolorum nesciunt sunt sed.",
                            KiloCalories = 791,
                            Name = "Practical Soft Car",
                            Price = 55.066796587811180m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Ex iste molestiae ullam tenetur cumque dolor dolorum eum.",
                            KiloCalories = 323,
                            Name = "Generic Plastic Chips",
                            Price = 69.84958121313225m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 9,
                            Description = "Voluptatem modi nemo consequuntur in quis eos non sunt.",
                            KiloCalories = 626,
                            Name = "Incredible Granite Cheese",
                            Price = 62.655720730617480m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 10,
                            Description = "Rerum nobis quasi quia sequi nobis quas perspiciatis dolor.",
                            Name = "Sleek Steel Bacon",
                            Price = 73.548797461459810m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 11,
                            Description = "Est aut mollitia.",
                            KiloCalories = 978,
                            Name = "Fantastic Frozen Cheese",
                            Price = 42.856412265848565m,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 12,
                            Description = "Nisi fugit quis odit.",
                            KiloCalories = 895,
                            Name = "Ergonomic Cotton Shirt",
                            Price = 80.349964988580860m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 13,
                            Description = "Id totam quisquam omnis ut cum asperiores.",
                            Name = "Incredible Rubber Table",
                            Price = 97.317719316257970m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 14,
                            Description = "Iusto in illum ipsa enim alias repellendus.",
                            Name = "Licensed Rubber Fish",
                            Price = 76.977557112452345m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 15,
                            Description = "Veniam repudiandae qui nesciunt omnis modi.",
                            KiloCalories = 216,
                            Name = "Practical Granite Soap",
                            Price = 43.543706202667055m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 16,
                            Description = "Ducimus labore illo.",
                            KiloCalories = 587,
                            Name = "Intelligent Granite Fish",
                            Price = 54.677410409635640m,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 17,
                            Description = "Ex blanditiis voluptas nulla asperiores.",
                            KiloCalories = 400,
                            Name = "Fantastic Granite Tuna",
                            Price = 58.591007657158630m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 18,
                            Description = "Sunt distinctio voluptatem quos.",
                            KiloCalories = 377,
                            Name = "Ergonomic Granite Chicken",
                            Price = 14.547637423755465m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 19,
                            Description = "Laboriosam occaecati quam harum rerum et sit qui et enim.",
                            Name = "Generic Rubber Hat",
                            Price = 32.069543512570425m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 20,
                            Description = "Debitis rerum cum.",
                            KiloCalories = 784,
                            Name = "Practical Rubber Keyboard",
                            Price = 59.893838996018235m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 21,
                            Description = "Et ab possimus.",
                            KiloCalories = 778,
                            Name = "Sleek Fresh Hat",
                            Price = 8.792374156784440m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 22,
                            Description = "Non ducimus non ipsa ex necessitatibus ut.",
                            KiloCalories = 871,
                            Name = "Awesome Cotton Gloves",
                            Price = 32.223608364455235m,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 23,
                            Description = "Et vero ut in cupiditate itaque est consequatur.",
                            Name = "Awesome Wooden Soap",
                            Price = 85.33207401415895m,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 24,
                            Description = "Similique aperiam incidunt iste sit et quo harum modi officiis.",
                            Name = "Small Concrete Hat",
                            Price = 7.3279483790173880m,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 25,
                            Description = "Ratione ipsam nulla delectus sit pariatur aut rerum sequi.",
                            KiloCalories = 175,
                            Name = "Generic Steel Sausages",
                            Price = 12.6211265789443240m,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 26,
                            Description = "Ex repellat nemo et molestiae exercitationem adipisci modi consequuntur.",
                            KiloCalories = 548,
                            Name = "Refined Soft Cheese",
                            Price = 72.101326404186615m,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 27,
                            Description = "Eius saepe sint nobis voluptatem eum amet.",
                            Name = "Licensed Soft Bacon",
                            Price = 45.621425109273460m,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 28,
                            Description = "Accusantium veniam odio dolores et quae est quaerat quisquam voluptatem.",
                            Name = "Incredible Rubber Computer",
                            Price = 67.009413441181830m,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 29,
                            Description = "Enim veniam sapiente quae hic dolorem.",
                            KiloCalories = 866,
                            Name = "Rustic Plastic Salad",
                            Price = 11.5519514105058970m,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 30,
                            Description = "Error fugit dolorem soluta numquam corporis harum cupiditate facere repudiandae.",
                            KiloCalories = 258,
                            Name = "Refined Metal Shirt",
                            Price = 96.140298576159530m,
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 31,
                            Description = "Quia voluptatem rerum.",
                            Name = "Small Plastic Gloves",
                            Price = 8.7367672583725155m,
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 32,
                            Description = "Veniam ad labore assumenda natus.",
                            Name = "Unbranded Steel Shoes",
                            Price = 35.228217146465695m,
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 33,
                            Description = "Deserunt facere repellendus.",
                            Name = "Generic Fresh Shoes",
                            Price = 55.247733129769440m,
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 34,
                            Description = "Rerum omnis omnis cum omnis et eius.",
                            KiloCalories = 326,
                            Name = "Licensed Frozen Chair",
                            Price = 96.87043326062640m,
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 35,
                            Description = "Sint qui in vero illum.",
                            KiloCalories = 686,
                            Name = "Handmade Frozen Pants",
                            Price = 94.846914710871395m,
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 36,
                            Description = "Magnam illum explicabo eum corporis provident suscipit quo harum voluptatum.",
                            KiloCalories = 898,
                            Name = "Awesome Steel Table",
                            Price = 5.79615839561268575m,
                            RestaurantId = 7
                        },
                        new
                        {
                            Id = 37,
                            Description = "Laboriosam distinctio ea sed perferendis voluptates est repudiandae odit.",
                            KiloCalories = 930,
                            Name = "Refined Metal Tuna",
                            Price = 13.591460605893035m,
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 38,
                            Description = "Et ea officiis quam ullam eius mollitia quidem et ipsa.",
                            KiloCalories = 561,
                            Name = "Intelligent Soft Bike",
                            Price = 17.825434090488295m,
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 39,
                            Description = "Est est assumenda deleniti porro aut amet qui iure.",
                            KiloCalories = 320,
                            Name = "Generic Steel Chips",
                            Price = 45.337707738083675m,
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 40,
                            Description = "Cum occaecati laudantium temporibus eius natus sed et.",
                            KiloCalories = 928,
                            Name = "Practical Plastic Ball",
                            Price = 77.783912856962495m,
                            RestaurantId = 8
                        },
                        new
                        {
                            Id = 41,
                            Description = "Recusandae velit qui.",
                            KiloCalories = 530,
                            Name = "Rustic Rubber Shoes",
                            Price = 9.0743155563596270m,
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 42,
                            Description = "Voluptates quibusdam aliquid pariatur consectetur.",
                            KiloCalories = 873,
                            Name = "Unbranded Rubber Chicken",
                            Price = 75.54084208353460m,
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 43,
                            Description = "In neque similique cumque.",
                            KiloCalories = 818,
                            Name = "Generic Wooden Soap",
                            Price = 72.734892532571640m,
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 44,
                            Description = "Ut vero sit nulla ut neque minima officia eos aut.",
                            KiloCalories = 688,
                            Name = "Practical Frozen Cheese",
                            Price = 94.302339332318970m,
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 45,
                            Description = "Repudiandae corporis maiores laboriosam.",
                            KiloCalories = 759,
                            Name = "Handmade Frozen Fish",
                            Price = 42.403702520487670m,
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 46,
                            Description = "Eos assumenda enim enim magni fugiat sed doloribus.",
                            KiloCalories = 907,
                            Name = "Gorgeous Granite Cheese",
                            Price = 21.275816083082875m,
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 47,
                            Description = "Aspernatur quidem excepturi dolore maiores quibusdam et id et.",
                            KiloCalories = 811,
                            Name = "Handmade Plastic Hat",
                            Price = 68.302583416599090m,
                            RestaurantId = 9
                        },
                        new
                        {
                            Id = 48,
                            Description = "Eum deserunt ducimus sunt fugiat et occaecati corrupti mollitia.",
                            KiloCalories = 603,
                            Name = "Rustic Concrete Towels",
                            Price = 93.054586294132595m,
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 49,
                            Description = "Quidem harum velit omnis tempora temporibus necessitatibus quasi dolorem.",
                            KiloCalories = 680,
                            Name = "Gorgeous Rubber Tuna",
                            Price = 78.441101717036670m,
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 50,
                            Description = "Suscipit et voluptas possimus dicta nam ut consequatur doloribus possimus.",
                            KiloCalories = 882,
                            Name = "Intelligent Plastic Pizza",
                            Price = 41.9305538837475m,
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 51,
                            Description = "Qui sed quos maiores.",
                            KiloCalories = 581,
                            Name = "Gorgeous Concrete Car",
                            Price = 79.253852127238145m,
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 52,
                            Description = "Maiores dolor minima.",
                            KiloCalories = 156,
                            Name = "Handcrafted Cotton Sausages",
                            Price = 35.396345025113015m,
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 53,
                            Description = "Porro aut consequatur consectetur temporibus totam ea voluptatem error eveniet.",
                            Name = "Tasty Cotton Ball",
                            Price = 58.60362441679630m,
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 54,
                            Description = "Iste voluptas minus.",
                            KiloCalories = 737,
                            Name = "Fantastic Steel Pants",
                            Price = 10.3064916167904070m,
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 55,
                            Description = "Quasi aut itaque enim dolor consequatur.",
                            KiloCalories = 195,
                            Name = "Intelligent Steel Bacon",
                            Price = 30.211898570513285m,
                            RestaurantId = 10
                        },
                        new
                        {
                            Id = 56,
                            Description = "Cum illum accusantium dolores.",
                            KiloCalories = 988,
                            Name = "Licensed Frozen Car",
                            Price = 44.503999615322825m,
                            RestaurantId = 11
                        },
                        new
                        {
                            Id = 57,
                            Description = "Aspernatur provident eum consequatur ut neque.",
                            KiloCalories = 982,
                            Name = "Gorgeous Metal Towels",
                            Price = 21.026386430499340m,
                            RestaurantId = 11
                        },
                        new
                        {
                            Id = 58,
                            Description = "Dolor omnis non veniam nulla magnam sed error.",
                            KiloCalories = 586,
                            Name = "Incredible Concrete Tuna",
                            Price = 29.970913298880195m,
                            RestaurantId = 11
                        },
                        new
                        {
                            Id = 59,
                            Description = "Officia dolorem fugit commodi eum nobis ad iusto aspernatur.",
                            KiloCalories = 966,
                            Name = "Handmade Metal Soap",
                            Price = 99.581566382936035m,
                            RestaurantId = 12
                        },
                        new
                        {
                            Id = 60,
                            Description = "Consectetur in quo expedita inventore est.",
                            KiloCalories = 497,
                            Name = "Small Steel Pizza",
                            Price = 42.945000805400790m,
                            RestaurantId = 12
                        },
                        new
                        {
                            Id = 61,
                            Description = "Fugit occaecati ducimus error nesciunt in.",
                            KiloCalories = 190,
                            Name = "Refined Fresh Chips",
                            Price = 53.412730520783320m,
                            RestaurantId = 12
                        },
                        new
                        {
                            Id = 62,
                            Description = "Sit pariatur quis in unde amet.",
                            KiloCalories = 925,
                            Name = "Licensed Wooden Shoes",
                            Price = 69.814518270927715m,
                            RestaurantId = 12
                        },
                        new
                        {
                            Id = 63,
                            Description = "Voluptatibus nihil cum repellat hic pariatur veniam maiores voluptatibus.",
                            Name = "Incredible Steel Sausages",
                            Price = 49.998986425343475m,
                            RestaurantId = 12
                        },
                        new
                        {
                            Id = 64,
                            Description = "Non id et ipsum similique.",
                            Name = "Refined Metal Pants",
                            Price = 45.227165781067280m,
                            RestaurantId = 12
                        },
                        new
                        {
                            Id = 65,
                            Description = "Provident esse non ducimus laborum.",
                            Name = "Licensed Plastic Tuna",
                            Price = 42.250395241310110m,
                            RestaurantId = 12
                        },
                        new
                        {
                            Id = 66,
                            Description = "Sed quas velit autem.",
                            KiloCalories = 560,
                            Name = "Practical Concrete Pizza",
                            Price = 78.44279297322165m,
                            RestaurantId = 12
                        },
                        new
                        {
                            Id = 67,
                            Description = "Eum dolor adipisci iste officiis occaecati quia dolorum.",
                            KiloCalories = 973,
                            Name = "Incredible Rubber Cheese",
                            Price = 24.340052494937545m,
                            RestaurantId = 13
                        },
                        new
                        {
                            Id = 68,
                            Description = "Laudantium aliquam voluptatem recusandae nam omnis.",
                            Name = "Awesome Concrete Car",
                            Price = 40.282476423439765m,
                            RestaurantId = 13
                        },
                        new
                        {
                            Id = 69,
                            Description = "Quidem dolores reiciendis reiciendis rerum.",
                            KiloCalories = 156,
                            Name = "Intelligent Wooden Shirt",
                            Price = 53.146403524161535m,
                            RestaurantId = 13
                        },
                        new
                        {
                            Id = 70,
                            Description = "Inventore modi ipsa ut ab harum fugit nihil inventore incidunt.",
                            KiloCalories = 163,
                            Name = "Intelligent Fresh Bike",
                            Price = 29.40370107274675m,
                            RestaurantId = 13
                        },
                        new
                        {
                            Id = 71,
                            Description = "Magni suscipit cumque qui et maiores et asperiores voluptatum.",
                            Name = "Ergonomic Frozen Chair",
                            Price = 93.064598330792315m,
                            RestaurantId = 13
                        },
                        new
                        {
                            Id = 72,
                            Description = "Doloremque id sed.",
                            Name = "Generic Concrete Shirt",
                            Price = 36.354584166013930m,
                            RestaurantId = 13
                        },
                        new
                        {
                            Id = 73,
                            Description = "Debitis et ex sed error ab.",
                            KiloCalories = 157,
                            Name = "Ergonomic Metal Bike",
                            Price = 6.3633092638865655m,
                            RestaurantId = 14
                        },
                        new
                        {
                            Id = 74,
                            Description = "Aut et sunt nihil.",
                            KiloCalories = 732,
                            Name = "Sleek Soft Keyboard",
                            Price = 39.068456671232525m,
                            RestaurantId = 14
                        },
                        new
                        {
                            Id = 75,
                            Description = "Et voluptate nobis dicta fugit quod facilis.",
                            KiloCalories = 730,
                            Name = "Tasty Fresh Chair",
                            Price = 49.319770447593060m,
                            RestaurantId = 14
                        },
                        new
                        {
                            Id = 76,
                            Description = "Consectetur tenetur est quia et perspiciatis.",
                            KiloCalories = 523,
                            Name = "Intelligent Steel Computer",
                            Price = 30.559022322091775m,
                            RestaurantId = 14
                        },
                        new
                        {
                            Id = 77,
                            Description = "Cumque aut temporibus ducimus perferendis necessitatibus assumenda aperiam nesciunt consequatur.",
                            KiloCalories = 954,
                            Name = "Fantastic Granite Table",
                            Price = 93.135802158217815m,
                            RestaurantId = 14
                        },
                        new
                        {
                            Id = 78,
                            Description = "Repellendus nesciunt qui enim dolorem maxime eum possimus.",
                            KiloCalories = 526,
                            Name = "Refined Plastic Table",
                            Price = 99.799567363131570m,
                            RestaurantId = 14
                        },
                        new
                        {
                            Id = 79,
                            Description = "At earum quos repudiandae magni quia adipisci aliquid.",
                            KiloCalories = 131,
                            Name = "Ergonomic Plastic Soap",
                            Price = 39.029729952583855m,
                            RestaurantId = 15
                        },
                        new
                        {
                            Id = 80,
                            Description = "Aut aperiam harum sunt sit asperiores in provident.",
                            KiloCalories = 963,
                            Name = "Handcrafted Concrete Car",
                            Price = 26.465333828919220m,
                            RestaurantId = 15
                        },
                        new
                        {
                            Id = 81,
                            Description = "Quae eaque voluptas.",
                            KiloCalories = 939,
                            Name = "Small Cotton Table",
                            Price = 31.350552999112115m,
                            RestaurantId = 15
                        },
                        new
                        {
                            Id = 82,
                            Description = "Aspernatur tenetur magni nesciunt voluptatem et sint autem ut repellat.",
                            KiloCalories = 780,
                            Name = "Sleek Granite Soap",
                            Price = 50.155732620114295m,
                            RestaurantId = 16
                        },
                        new
                        {
                            Id = 83,
                            Description = "Tenetur odio sequi omnis ut.",
                            KiloCalories = 990,
                            Name = "Handcrafted Plastic Shirt",
                            Price = 38.813970768271890m,
                            RestaurantId = 16
                        },
                        new
                        {
                            Id = 84,
                            Description = "Ipsum excepturi aspernatur sapiente consequatur saepe fuga ea et.",
                            Name = "Incredible Frozen Keyboard",
                            Price = 81.873489179123870m,
                            RestaurantId = 16
                        },
                        new
                        {
                            Id = 85,
                            Description = "Veniam veritatis animi expedita sint sed similique.",
                            Name = "Generic Wooden Chair",
                            Price = 14.0542451613835245m,
                            RestaurantId = 16
                        },
                        new
                        {
                            Id = 86,
                            Description = "Quibusdam occaecati assumenda eaque quia corrupti autem.",
                            KiloCalories = 910,
                            Name = "Intelligent Rubber Keyboard",
                            Price = 80.485667383990130m,
                            RestaurantId = 16
                        },
                        new
                        {
                            Id = 87,
                            Description = "Dolore illo sequi et.",
                            KiloCalories = 474,
                            Name = "Handcrafted Steel Mouse",
                            Price = 38.338642135885860m,
                            RestaurantId = 16
                        },
                        new
                        {
                            Id = 88,
                            Description = "Quidem earum consequatur quas.",
                            Name = "Gorgeous Cotton Shoes",
                            Price = 22.620487642763370m,
                            RestaurantId = 16
                        },
                        new
                        {
                            Id = 89,
                            Description = "Qui molestiae occaecati velit quos.",
                            Name = "Practical Steel Chicken",
                            Price = 20.257748074483940m,
                            RestaurantId = 17
                        },
                        new
                        {
                            Id = 90,
                            Description = "In accusantium qui dolore est ut molestias eos ad.",
                            KiloCalories = 587,
                            Name = "Sleek Plastic Table",
                            Price = 81.137130586959920m,
                            RestaurantId = 17
                        },
                        new
                        {
                            Id = 91,
                            Description = "Et maxime quod.",
                            KiloCalories = 616,
                            Name = "Fantastic Plastic Fish",
                            Price = 17.756090861631630m,
                            RestaurantId = 17
                        },
                        new
                        {
                            Id = 92,
                            Description = "Est magni error quos.",
                            KiloCalories = 371,
                            Name = "Awesome Fresh Bacon",
                            Price = 74.07701727658375m,
                            RestaurantId = 17
                        },
                        new
                        {
                            Id = 93,
                            Description = "Provident aut quas provident inventore dolor eum aut dolorem.",
                            KiloCalories = 502,
                            Name = "Ergonomic Wooden Gloves",
                            Price = 24.114094501880040m,
                            RestaurantId = 18
                        },
                        new
                        {
                            Id = 94,
                            Description = "Ad cum qui occaecati esse.",
                            KiloCalories = 615,
                            Name = "Fantastic Soft Soap",
                            Price = 53.244713413643080m,
                            RestaurantId = 18
                        },
                        new
                        {
                            Id = 95,
                            Description = "Accusantium numquam sit iste.",
                            KiloCalories = 865,
                            Name = "Awesome Soft Car",
                            Price = 79.917272946293125m,
                            RestaurantId = 18
                        },
                        new
                        {
                            Id = 96,
                            Description = "Quos vero reprehenderit sunt nobis quo sed sapiente impedit.",
                            KiloCalories = 892,
                            Name = "Generic Steel Tuna",
                            Price = 26.749884242541075m,
                            RestaurantId = 19
                        },
                        new
                        {
                            Id = 97,
                            Description = "Ut consequuntur a.",
                            Name = "Handcrafted Soft Pants",
                            Price = 31.493568702830735m,
                            RestaurantId = 19
                        },
                        new
                        {
                            Id = 98,
                            Description = "Itaque cupiditate iste sapiente expedita ut aut distinctio doloremque iste.",
                            KiloCalories = 1000,
                            Name = "Tasty Rubber Chair",
                            Price = 16.036231650987790m,
                            RestaurantId = 19
                        },
                        new
                        {
                            Id = 99,
                            Description = "Quibusdam suscipit placeat pariatur aut corrupti sit.",
                            Name = "Handmade Metal Computer",
                            Price = 13.5086172323248455m,
                            RestaurantId = 19
                        },
                        new
                        {
                            Id = 100,
                            Description = "Omnis omnis autem ut mollitia ea maxime sunt facilis quam.",
                            KiloCalories = 773,
                            Name = "Fantastic Steel Pants",
                            Price = 9.2648443622816540m,
                            RestaurantId = 19
                        },
                        new
                        {
                            Id = 101,
                            Description = "Dolorum deserunt et voluptatem.",
                            Name = "Unbranded Granite Table",
                            Price = 31.394265585762530m,
                            RestaurantId = 19
                        },
                        new
                        {
                            Id = 102,
                            Description = "Sequi fuga sunt nobis.",
                            KiloCalories = 404,
                            Name = "Small Cotton Pizza",
                            Price = 66.634430257433325m,
                            RestaurantId = 20
                        },
                        new
                        {
                            Id = 103,
                            Description = "Repellendus tempora eligendi sit aut voluptatem soluta ad.",
                            KiloCalories = 168,
                            Name = "Unbranded Fresh Car",
                            Price = 57.131524040424940m,
                            RestaurantId = 20
                        },
                        new
                        {
                            Id = 104,
                            Description = "Et veniam facere aut natus doloremque officiis quam corrupti.",
                            Name = "Licensed Granite Fish",
                            Price = 80.564919796569680m,
                            RestaurantId = 20
                        },
                        new
                        {
                            Id = 105,
                            Description = "Reprehenderit iste aut eum molestiae qui itaque.",
                            KiloCalories = 700,
                            Name = "Rustic Rubber Computer",
                            Price = 27.264644965652720m,
                            RestaurantId = 20
                        },
                        new
                        {
                            Id = 106,
                            Description = "Vero beatae a saepe quo.",
                            KiloCalories = 233,
                            Name = "Ergonomic Plastic Car",
                            Price = 20.310818951256005m,
                            RestaurantId = 20
                        },
                        new
                        {
                            Id = 107,
                            Description = "Quia sed suscipit velit occaecati cumque blanditiis unde totam.",
                            KiloCalories = 652,
                            Name = "Sleek Metal Salad",
                            Price = 25.097419142302740m,
                            RestaurantId = 20
                        },
                        new
                        {
                            Id = 108,
                            Description = "Nemo sed recusandae unde nisi consectetur itaque.",
                            KiloCalories = 193,
                            Name = "Refined Frozen Pants",
                            Price = 42.08821208546320m,
                            RestaurantId = 20
                        },
                        new
                        {
                            Id = 109,
                            Description = "Illo sed et sed vel ea eveniet.",
                            KiloCalories = 852,
                            Name = "Handmade Frozen Shirt",
                            Price = 49.27241067368180m,
                            RestaurantId = 20
                        });
                });

            modelBuilder.Entity("Restaurants.Domain.Entities.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contactnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDelivery")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Italian",
                            ContactEmail = "Raymond71@hotmail.com",
                            Contactnumber = "1-951-703-5805",
                            Description = "Est excepturi quia omnis ut. Quas voluptatem vel quaerat sint. Vel in qui.",
                            HasDelivery = true,
                            Name = "Connelly, Cassin and Ledner",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 2,
                            Category = "American",
                            ContactEmail = "Jessyca.Altenwerth0@yahoo.com",
                            Contactnumber = "(799) 243-6031",
                            Description = "Fuga fugit magnam est nostrum est qui quae id. Ab quam nihil et eius perferendis commodi. Quasi porro quasi laudantium aut.",
                            HasDelivery = true,
                            Name = "Hoppe, Cormier and Balistreri",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Italian",
                            ContactEmail = "Enrico.Rolfson4@gmail.com",
                            Contactnumber = "998-325-6612 x10299",
                            Description = "Id sit aut a sit impedit neque. Qui sit omnis. Dolores numquam deserunt excepturi. Voluptas tempore porro nostrum omnis doloribus et accusantium ut non. Eius ut eaque. Deserunt nihil explicabo asperiores.",
                            HasDelivery = true,
                            Name = "Lemke, Jacobs and Gulgowski",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Mexican",
                            ContactEmail = "Trystan.Schuster33@yahoo.com",
                            Contactnumber = "1-886-312-2860 x488",
                            Description = "Iste quo quia mollitia reprehenderit aut dignissimos. Sapiente laudantium perspiciatis rerum consequatur. Odit alias sit earum. Ea deserunt in consequuntur voluptates delectus necessitatibus ipsum.",
                            HasDelivery = false,
                            Name = "Tillman Inc",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Japanese",
                            ContactEmail = "Elias89@gmail.com",
                            Contactnumber = "792-797-0360 x653",
                            Description = "Officia non harum et. Aut aut ut occaecati quisquam velit non temporibus. Velit recusandae illo illo numquam ipsam ipsum. Enim aut rem consequatur qui. Distinctio repellat ex vero enim sit itaque deserunt laborum. A beatae rem aut enim sint.",
                            HasDelivery = false,
                            Name = "Welch, Konopelski and Toy",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Japanese",
                            ContactEmail = "Laila_Rolfson@gmail.com",
                            Contactnumber = "1-844-215-4094 x347",
                            Description = "Nam aspernatur dolores voluptas nostrum. Aliquid alias culpa aliquid sequi sit facilis aut rerum dolor. Velit rerum et eos ex et quam molestiae. Temporibus iste sed tempore. Expedita aut optio tempora enim ut.",
                            HasDelivery = false,
                            Name = "Moen LLC",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 7,
                            Category = "American",
                            ContactEmail = "Pamela_Ledner67@yahoo.com",
                            Contactnumber = "(487) 589-8607 x98179",
                            Description = "Itaque et quia rerum aut harum rerum voluptas quas quia. Aut et fuga. Similique sequi autem dolores autem aut consequatur et voluptatem ut. Dolorem dolorem in mollitia magni autem quis perspiciatis ab alias.",
                            HasDelivery = true,
                            Name = "Dickens Group",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Japanese",
                            ContactEmail = "Justus87@yahoo.com",
                            Contactnumber = "1-932-948-8084 x87828",
                            Description = "Ea in sint sint inventore nulla ut pariatur iure. Aut magni aut. Ut doloremque omnis expedita voluptatem magni velit. Fugit sequi laudantium eum error voluptatibus impedit ad.",
                            HasDelivery = true,
                            Name = "Kihn, Ullrich and Dietrich",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Italian",
                            ContactEmail = "Jarred66@gmail.com",
                            Contactnumber = "(301) 512-2738",
                            Description = "Cum veniam consequatur eos fugit aut. Excepturi aliquid totam nobis sequi et. Aliquid vel sapiente laboriosam veniam minima voluptate omnis aut. Molestiae iure maxime id. Voluptates et dolorem aut rem sed. Hic aspernatur exercitationem quisquam vel ut voluptatum maiores.",
                            HasDelivery = false,
                            Name = "Morar - Koelpin",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Italian",
                            ContactEmail = "Camille64@gmail.com",
                            Contactnumber = "557-285-3450 x9251",
                            Description = "Sunt tempore et eos. Error ut accusamus. Consequuntur doloribus exercitationem.",
                            HasDelivery = true,
                            Name = "Batz - Stoltenberg",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Chinese",
                            ContactEmail = "Deven_Padberg@hotmail.com",
                            Contactnumber = "(234) 363-8741",
                            Description = "Quia quae quae ut sint id explicabo. Rerum consectetur rerum non esse est quos neque qui. Voluptatum quia esse ea ipsa dolor optio impedit perferendis commodi. Est ducimus et eaque. Magnam aperiam praesentium.",
                            HasDelivery = false,
                            Name = "Koelpin, Schmidt and Feeney",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Mexican",
                            ContactEmail = "Lorena.Thompson@gmail.com",
                            Contactnumber = "935.804.0198 x999",
                            Description = "Qui officia adipisci maxime sapiente quia quis. Blanditiis cumque et aut excepturi rerum. Id velit fugit dolorum ut harum tenetur sed.",
                            HasDelivery = false,
                            Name = "Strosin LLC",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 13,
                            Category = "American",
                            ContactEmail = "Melyna.Schowalter45@yahoo.com",
                            Contactnumber = "300.847.0693",
                            Description = "Possimus sint libero a omnis illo qui sed autem. Corrupti eaque et aut nihil dolore eos. Et enim aspernatur aut quo id.",
                            HasDelivery = false,
                            Name = "Flatley, Koch and Kautzer",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 14,
                            Category = "Italian",
                            ContactEmail = "Efrain.Jerde@yahoo.com",
                            Contactnumber = "208.653.3830",
                            Description = "Similique odit ipsa est voluptas quo maxime sed recusandae ut. Molestias aut enim et commodi aperiam cum numquam ad. Sequi quisquam nam et cumque sed cumque aliquid. Pariatur rem nam placeat labore qui. Soluta deserunt molestias sunt. Nesciunt amet ut non dolores libero dignissimos repellat ad.",
                            HasDelivery = true,
                            Name = "Swaniawski LLC",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 15,
                            Category = "Chinese",
                            ContactEmail = "Roxane85@yahoo.com",
                            Contactnumber = "1-837-517-9264",
                            Description = "Voluptas asperiores provident optio. Quia ducimus aliquam. Ratione et neque veritatis praesentium. Iusto possimus non non repudiandae ipsa reiciendis et et. Nobis dolores animi in assumenda molestiae aut id.",
                            HasDelivery = true,
                            Name = "Herman Inc",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 16,
                            Category = "Italian",
                            ContactEmail = "Amir_Ondricka@yahoo.com",
                            Contactnumber = "521-297-3434 x48843",
                            Description = "Minus aperiam voluptate quasi nulla. Officia modi perspiciatis natus facilis aut velit qui architecto. Libero voluptas magnam deleniti nostrum quasi. Ut ut ea autem exercitationem aspernatur iste. Ad officia architecto sed facilis expedita temporibus ullam earum. Eos amet officia eos saepe fugiat accusantium qui ea rerum.",
                            HasDelivery = false,
                            Name = "Schimmel - Conroy",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 17,
                            Category = "Japanese",
                            ContactEmail = "Toni.Deckow79@gmail.com",
                            Contactnumber = "254.748.5268",
                            Description = "Non assumenda eveniet id tempore. Vel sed sit blanditiis quia sequi tenetur vel aut. Aut sed voluptas voluptas totam quos natus. Iste alias natus culpa illum eveniet dolor id id quos. Nostrum qui iure ipsam delectus doloribus eius voluptatem aut enim. Non et et rerum qui soluta beatae alias.",
                            HasDelivery = true,
                            Name = "Tillman Group",
                            OwnerId = "c125c9c1-9907-47b0-8a34-be8d39cd4774"
                        },
                        new
                        {
                            Id = 18,
                            Category = "Chinese",
                            ContactEmail = "Rosa_Ward@hotmail.com",
                            Contactnumber = "354-392-8661 x312",
                            Description = "Architecto et voluptatem accusamus possimus aspernatur cupiditate id et molestiae. Laudantium quia facilis. Consectetur fugiat velit suscipit autem ut totam et. Quisquam occaecati autem quia modi fuga vero distinctio ad. Mollitia ipsam est sint commodi.",
                            HasDelivery = false,
                            Name = "Fritsch, Daniel and Lowe",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 19,
                            Category = "Chinese",
                            ContactEmail = "Yazmin.DuBuque@yahoo.com",
                            Contactnumber = "1-418-780-5416",
                            Description = "Amet molestiae ab et perspiciatis ipsam. Omnis et omnis fuga accusamus suscipit a aspernatur omnis. Quidem quia aut.",
                            HasDelivery = true,
                            Name = "Langworth Group",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        },
                        new
                        {
                            Id = 20,
                            Category = "Chinese",
                            ContactEmail = "Oral38@yahoo.com",
                            Contactnumber = "451-570-3409 x3195",
                            Description = "Voluptatibus labore ut. Eos facere et debitis. Sit ut est voluptatem veritatis tempora quia hic nihil.",
                            HasDelivery = true,
                            Name = "Conroy and Sons",
                            OwnerId = "d8f1b82e-f13b-446d-9b64-5563ddc79dff"
                        });
                });

            modelBuilder.Entity("Restaurants.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Restaurants.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Restaurants.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurants.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Restaurants.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Restaurants.Domain.Entities.Dish", b =>
                {
                    b.HasOne("Restaurants.Domain.Entities.Restaurant", null)
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Restaurants.Domain.Entities.Restaurant", b =>
                {
                    b.HasOne("Restaurants.Domain.Entities.User", "Owner")
                        .WithMany("OwnedRestaurants")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Restaurants.Domain.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<int>("RestaurantId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RestaurantId");

                            b1.ToTable("Restaurants");

                            b1.WithOwner()
                                .HasForeignKey("RestaurantId");

                            b1.HasData(
                                new
                                {
                                    RestaurantId = 1,
                                    City = "North Marie",
                                    PostalCode = "97227-8538",
                                    Street = "814 Brendan Mall"
                                },
                                new
                                {
                                    RestaurantId = 2,
                                    City = "New Isaac",
                                    PostalCode = "07315-4297",
                                    Street = "8779 Becker Fork"
                                },
                                new
                                {
                                    RestaurantId = 3,
                                    City = "Gutkowskitown",
                                    PostalCode = "03213-3029",
                                    Street = "341 Ritchie Port"
                                },
                                new
                                {
                                    RestaurantId = 4,
                                    City = "Lake Yasmeen",
                                    PostalCode = "71990-2513",
                                    Street = "2019 Stefan Pass"
                                },
                                new
                                {
                                    RestaurantId = 5,
                                    City = "Lake Cade",
                                    PostalCode = "50213-8013",
                                    Street = "0167 Zakary Expressway"
                                },
                                new
                                {
                                    RestaurantId = 6,
                                    City = "Millsport",
                                    PostalCode = "05185",
                                    Street = "86894 Gordon Gateway"
                                },
                                new
                                {
                                    RestaurantId = 7,
                                    City = "North Adaburgh",
                                    PostalCode = "85560-7783",
                                    Street = "99612 Thiel Spur"
                                },
                                new
                                {
                                    RestaurantId = 8,
                                    City = "Whitestad",
                                    PostalCode = "93745",
                                    Street = "040 Kiarra Dam"
                                },
                                new
                                {
                                    RestaurantId = 9,
                                    City = "New Eusebio",
                                    PostalCode = "22628-5496",
                                    Street = "25947 Renner Overpass"
                                },
                                new
                                {
                                    RestaurantId = 10,
                                    City = "Lake Lucius",
                                    PostalCode = "49285",
                                    Street = "81441 Ullrich Falls"
                                },
                                new
                                {
                                    RestaurantId = 11,
                                    City = "Lelandstad",
                                    PostalCode = "99130",
                                    Street = "20990 Stehr Curve"
                                },
                                new
                                {
                                    RestaurantId = 12,
                                    City = "Addisonbury",
                                    PostalCode = "83070-4933",
                                    Street = "07225 Emilie Island"
                                },
                                new
                                {
                                    RestaurantId = 13,
                                    City = "Brennashire",
                                    PostalCode = "22549-3740",
                                    Street = "3622 Cory Mews"
                                },
                                new
                                {
                                    RestaurantId = 14,
                                    City = "Heidenreichville",
                                    PostalCode = "10928",
                                    Street = "90267 Fadel Alley"
                                },
                                new
                                {
                                    RestaurantId = 15,
                                    City = "Port Margaretteborough",
                                    PostalCode = "36010-2236",
                                    Street = "64659 Noble Field"
                                },
                                new
                                {
                                    RestaurantId = 16,
                                    City = "North Vadaport",
                                    PostalCode = "79910",
                                    Street = "9111 Yazmin Brooks"
                                },
                                new
                                {
                                    RestaurantId = 17,
                                    City = "South Hassan",
                                    PostalCode = "50243-5672",
                                    Street = "9725 Rowland Meadows"
                                },
                                new
                                {
                                    RestaurantId = 18,
                                    City = "New Kyle",
                                    PostalCode = "17233",
                                    Street = "2112 Liliane Haven"
                                },
                                new
                                {
                                    RestaurantId = 19,
                                    City = "Port Jedberg",
                                    PostalCode = "20071",
                                    Street = "7353 Krystal Cliffs"
                                },
                                new
                                {
                                    RestaurantId = 20,
                                    City = "Robelstad",
                                    PostalCode = "02487",
                                    Street = "7584 Bogan Locks"
                                });
                        });

                    b.Navigation("Address");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Restaurants.Domain.Entities.Restaurant", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("Restaurants.Domain.Entities.User", b =>
                {
                    b.Navigation("OwnedRestaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
